setwd("~/perso/tmp/project/penguins")
data <- read.csv("https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/data_2.csv")
summary(data)
print(round(mean(subset(na.omit(data), species == "Adelie" & island == "Torgersen")$bill_length_mm),2))
print(round(mean(subset(na.omit(data), species == "Adelie" & island == "Biscoe")$bill_length_mm),2))
print(round(mean(subset(na.omit(data), species == "Adelie" & island == "Dream")$bill_length_mm),2))
# Plot
penguins_clean <- na.omit(   data  )
plot(penguins_clean$bill_length_mm, penguins_clean$bill_depth_mm, type='n', xlab='Bill Length (mm)', ylab='Bill Depth (mm)', main='Penguin Bill Dimensions')
points(
penguins_clean$bill_length_mm[penguins_clean$species  ==  "Adelie"], penguins_clean$bill_depth_mm[penguins_clean$species == "Adelie"], col='red', pch=16)
points(penguins_clean$bill_length_mm[penguins_clean$species == "Chinstrap"], penguins_clean$bill_depth_mm[penguins_clean$species == "Chinstrap"], col='green', pch=17)
points(penguins_clean$bill_length_mm[penguins_clean$species == "Gentoo"],
penguins_clean$bill_depth_mm[penguins_clean$species == "Gentoo"], col='blue', pch=18)
legend("topright", legend=unique(penguins_clean$species),
col=c('red'
, 'green',
'blue'), pch=c(16, 17, 18))
setwd("~/perso/tmp/project/penguins")
library(tidyverse)
setwd("~/perso/tmp/project/penguins")
# Read data using readr
data = readr::read_csv("https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/data_2.csv")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Plot using ggplot2
data %>% na.omit() %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)) +
geom_point() +
labs(x = 'Bill Length (mm)', y = 'Bill Depth (mm)', title = 'Penguin Bill Dimensions') +
scale_shape_manual(values = c("Adelie" = 16, "Chinstrap" = 17, "Gentoo" = 18))
styler:::style_active_file()
styler:::style_active_file()
getwd()
data <- read_excel("data.xlsx")
library(readxl)
data <- read_excel("data.xlsx")
data <- read_excel("input/data.xlsx")
234*311
library(readxl)
data <- read_excel("input/data.xlsx")
# plot function
create_scatterplot <- function(data, selected_species, selected_island) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species, island == selected_island)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)
) +
geom_point() +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Penguin Bill Dimensions -", selected_species, "-", selected_island)
)
return(plot)
}
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
library(tidyverse)
# plot function
create_scatterplot <- function(data, selected_species, selected_island) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species, island == selected_island)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)
) +
geom_point() +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Penguin Bill Dimensions -", selected_species, "-", selected_island)
)
return(plot)
}
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
source(functions.R)
source(functions.R)
source(file = "functions.R")
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
library(readxl)
library(dplyr)
# Read data using readxl
data <- read_excel("input/data.xlsx", na = "NA")
# Remove 2 rows that are known to be wrong
clean_data <- data %>%
slice(-c(23, 48))
# Save in RDS format
saveRDS(clean_data, file = "input/clean_data.rds")
citation("tidyverse")
## Module 2, Lesson 2 ----
library(rmarkdown)
# Read the clean dataset
data <- readRDS(file = "input/clean_data.rds")
# Summary
summary(data)
# Source functions
source(file = "functions.R")
# load the tidyverse
library(tidyverse)
# Source functions
source(file = "functions.R")
# Read the clean dataset
data <- readRDS(file = "input/clean_data.rds")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Use the function in functions.R
create_scatterplot(data, "Adelie", "Torgersen")
# Source functions
source(file="R/functions.R")
# Read the clean dataset
data <- readRDS(file = "input/clean_data.rds")
# Source functions
source(file="R/functions.R")
# Read the clean dataset
data <- readRDS(file = "input/clean_data.rds")
data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
# load the tidyverse
library(tidyverse)
data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
# load the tidyverse
library(tidyverse)
library(hrbrthemes)    # ipsum theme for ggplot2 charts
# load the tidyverse
install.packages(tidyverse)
# load the tidyverse
install.packages("tidyverse")
install.packages("tidyverse")
# Source functions
source(file="R/functions.R")
# Source functions
source(file="R/functions.R")
# Read the clean dataset
data <- readRDS(file = "input/clean_data.rds")
# Read the clean dataset
data <- readRDS(file = "input/clean_data.rds")
data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE))
data %>%
group_by(species) %>%
summarise(average_bill_depth = mean(bill_depth_mm, na.rm = TRUE))
data %>%
group_by(species) %>%
summarise(average_bill_depth = mean(bill_depth_mm, na.rm = TRUE))
Now, let's check the relationship between bill depth and bill length for the specie `Adelie` on the island `Torgersen`:
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
View(create_scatterplot)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)
) +
geom_point() +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Penguin Bill Dimensions -", selected_species, "-", selected_island)
)
# Source functions
source(file="R/functions.R")
# Read the clean dataset
data <- readRDS(file = "input/clean_data.rds")
```{r, fig.align = "center", fig.width=5, fig.height=5, warning=FALSE, fig.cap="Relationship between bill **length** and bill **depth**. **All** data points included."}
data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
# load the tidyverse
library(tidyverse)
library(hrbrthemes)    # ipsum theme for ggplot2 charts
library(patchwork)     # combine charts together
```{r, fig.align = "center", fig.width=5, fig.height=5, warning=FALSE, fig.cap="Relationship between bill **length** and bill **depth**. **All** data points included."}
data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
View(create_scatterplot)
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species, island == selected_island)
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
p2 <- create_scatterplot(data, "Chinstrap", "#e85252")
p3 <- create_scatterplot(data, "Gentoo", "#9a6fb0")
p1 + p2 + p3
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species)
create_scatterplot <- function(data, selected_species, color) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color=color) +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = selected_species
) +
theme(legend.position = "none")
return(plot)
}
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species)
create_scatterplot <- function(data, selected_species, color) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color=color) +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = selected_species
) +
theme(legend.position = "none")
return(plot)
}
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
p2 <- create_scatterplot(data, "Chinstrap", "#e85252")
p3 <- create_scatterplot(data, "Gentoo", "#9a6fb0")
p1 + p2 + p3
p1
p2
p3
p1 + p2
p1 + p2 + p3
p1
p2
p3
library(DT)
# Full data table
datatable(data)
data %>%
group_by(species) %>%
summarise(average_bill_depth = mean(bill_depth_mm, na.rm = TRUE))
bill_depth_per_specie <- data %>%
group_by(species) %>%
summarise(average_bill_depth = mean(bill_depth_mm, na.rm = TRUE))
library(plotly)
bill_scatterplot <- data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
ggplotly(bill_scatterplot)
library(ggplot2)
library(plotly)
library(ggplot2)
bill_scatterplot <- data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
ggplotly(bill_scatterplot)
p <- data %>%
ggplot(
aes(x = bill_length_mm, y = bill_depth_mm)
) +
geom_point(color="#69b3a2") +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Surprising relationship?")
) +
theme_ipsum()
ggplotly(p)
install.packages(plotly)
library(plotly)        # interactive graphs
p1 + p2 + p3
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
p2 <- create_scatterplot(data, "Chinstrap", "#e85252")
p3 <- create_scatterplot(data, "Gentoo", "#9a6fb0")
p1 + p2 + p3
install.packages(c("bayestestR", "broom.mixed", "caret", "cli", "corrr", "credentials", "crul", "datawizard", "dm", "dplyr", "DT", "effectsize", "flextable", "Formula", "furrr", "future", "GGally", "ggpubr", "ggsci", "ggsignif", "globals", "glue", "gower", "hardhat", "Hmisc", "htmlTable", "insight", "interp", "ipred", "lava", "lifecycle", "officer", "pak", "parallelly", "parameters", "pdftools", "performance", "pROC", "prodlim", "qpdf", "readr", "recipes", "remotes", "rio", "rlang", "rstatix", "see", "seriation", "shinyWidgets", "stringi", "stringr", "styler", "systemfonts", "tidyr", "timeDate", "tinytex", "TSP", "vctrs", "vitae", "vroom", "writexl", "xfun"))
install.packages(c("bayestestR", "broom.mixed", "caret", "cli", "corrr", "credentials", "crul", "datawizard", "dm", "dplyr", "DT", "effectsize", "flextable", "Formula", "furrr", "future", "GGally", "ggpubr", "ggsci", "ggsignif", "globals", "glue", "gower", "hardhat", "Hmisc", "htmlTable", "insight", "interp", "ipred", "lava", "lifecycle", "officer", "pak", "parallelly", "parameters", "pdftools", "performance", "pROC", "prodlim", "qpdf", "readr", "recipes", "remotes", "rio", "rlang", "rstatix", "see", "seriation", "shinyWidgets", "stringi", "stringr", "styler", "systemfonts", "tidyr", "timeDate", "tinytex", "TSP", "vctrs", "vitae", "vroom", "writexl", "xfun"))
install.packages(c("bayestestR", "broom.mixed", "caret", "cli", "corrr", "credentials", "crul", "datawizard", "dm", "dplyr", "DT", "effectsize", "flextable", "Formula", "furrr", "future", "GGally", "ggpubr", "ggsci", "ggsignif", "globals", "glue", "gower", "hardhat", "Hmisc", "htmlTable", "insight", "interp", "ipred", "lava", "lifecycle", "officer", "pak", "parallelly", "parameters", "pdftools", "performance", "pROC", "prodlim", "qpdf", "readr", "recipes", "remotes", "rio", "rlang", "rstatix", "see", "seriation", "shinyWidgets", "stringi", "stringr", "styler", "systemfonts", "tidyr", "timeDate", "tinytex", "TSP", "vctrs", "vitae", "vroom", "writexl", "xfun"))
install.packages(c("bayestestR", "broom.mixed", "caret", "cli", "corrr", "credentials", "crul", "datawizard", "dm", "dplyr", "DT", "effectsize", "flextable", "Formula", "furrr", "future", "GGally", "ggpubr", "ggsci", "ggsignif", "globals", "glue", "gower", "hardhat", "Hmisc", "htmlTable", "insight", "interp", "ipred", "lava", "lifecycle", "officer", "pak", "parallelly", "parameters", "pdftools", "performance", "pROC", "prodlim", "qpdf", "readr", "recipes", "remotes", "rio", "rlang", "rstatix", "see", "seriation", "shinyWidgets", "stringi", "stringr", "styler", "systemfonts", "tidyr", "timeDate", "tinytex", "TSP", "vctrs", "vitae", "vroom", "writexl", "xfun"))
install.packages(c("bayestestR", "broom.mixed", "caret", "cli", "corrr", "credentials", "crul", "datawizard", "dm", "dplyr", "DT", "effectsize", "flextable", "Formula", "furrr", "future", "GGally", "ggpubr", "ggsci", "ggsignif", "globals", "glue", "gower", "hardhat", "Hmisc", "htmlTable", "insight", "interp", "ipred", "lava", "lifecycle", "officer", "pak", "parallelly", "parameters", "pdftools", "performance", "pROC", "prodlim", "qpdf", "readr", "recipes", "remotes", "rio", "rlang", "rstatix", "see", "seriation", "shinyWidgets", "stringi", "stringr", "styler", "systemfonts", "tidyr", "timeDate", "tinytex", "TSP", "vctrs", "vitae", "vroom", "writexl", "xfun"))
install.packages(c("bayestestR", "broom.mixed", "caret", "cli", "corrr", "credentials", "crul", "datawizard", "dm", "dplyr", "DT", "effectsize", "flextable", "Formula", "furrr", "future", "GGally", "ggpubr", "ggsci", "ggsignif", "globals", "glue", "gower", "hardhat", "Hmisc", "htmlTable", "insight", "interp", "ipred", "lava", "lifecycle", "officer", "pak", "parallelly", "parameters", "pdftools", "performance", "pROC", "prodlim", "qpdf", "readr", "recipes", "remotes", "rio", "rlang", "rstatix", "see", "seriation", "shinyWidgets", "stringi", "stringr", "styler", "systemfonts", "tidyr", "timeDate", "tinytex", "TSP", "vctrs", "vitae", "vroom", "writexl", "xfun"))
